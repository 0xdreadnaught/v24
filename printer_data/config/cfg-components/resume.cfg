[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
variable_lastx: 0
variable_lasty: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)

    {% set lastx = printer["gcode_macro RESUME"].lastx %}
    {% set lasty = printer["gcode_macro RESUME"].lasty %}

    {% if printer['pause_resume'].is_paused|int == 1 %}
        SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1                          ; enable filament encoder sensor
        SET_FILAMENT_SENSOR SENSOR=switch_sensor ENABLE=1                          ; enable filament encoder sensor
        #INITIAL_RGB                                                                    ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}

        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning

        # Restore X/Y and clear file
        G90
        G1 X{lastx} F6000
        G1 Y{lasty} F6000
        G91

        # Turn hotend back on and restore Z
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}

        BASE_RESUME                                                                  ; resume print
    {% endif %}